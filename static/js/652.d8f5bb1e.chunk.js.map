{"version":3,"file":"static/js/652.d8f5bb1e.chunk.js","mappings":"4PAEaA,EAAUC,EAAAA,EAAAA,IAAH,mHAQPC,EAAOD,EAAAA,EAAAA,GAAH,kKAUJE,EAAOF,EAAAA,EAAAA,GAAH,iaAmBJG,EAAOH,EAAAA,EAAAA,EAAH,gJAQJI,EAAMJ,EAAAA,EAAAA,IAAH,iF,SC5CHK,EAAO,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACrB,OACE,+BACE,SAACP,EAAD,WACE,SAACE,EAAD,UACGK,EAAKC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,cAAeC,EAAtB,EAAsBA,aAAtB,OACR,UAACR,EAAD,YACE,SAACE,EAAD,CACEO,IACED,EAAY,0CAC2BA,GACnC,oHAENE,IAAKH,KAEP,SAACN,EAAD,UAAOM,MATED,a,UCkBvB,EApBiB,WACf,IAAQK,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOT,EAAP,KAAaU,EAAb,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAQP,GACLQ,MAAK,SAAAC,GAAO,OAAIN,EAAQM,MACxBC,OAAM,SAAAN,GAAK,OAAIC,EAASD,EAAMO,cAChC,CAACX,KAGF,iCACIP,IAAQ,SAACmB,EAAA,EAAD,IACTnB,IAAQ,SAACD,EAAD,CAAMC,KAAMA,IACpBW,IAAS","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/Pages/CastPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastBox = styled.div`\n  max-width: 1400px;\n  margin: 0 auto;\n  padding-top: 50px;\n  padding-bottom: 50px;\n}\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: -30px;\n  margin-left: -30px;\n  flex-wrap: wrap;\n}\n`;\n\nexport const Item = styled.li`\n  flex-basis: calc(100% / 4 - 30px);\n  margin-top: 30px;\n  margin-left: 30px;\n  border-radius: 5px;\n  overflow: hidden;\n  align-items: center;\n  justify-content: center;\n  background-color: white;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  transform: scale(1);\n  transition: all 250ms linear;\n  &:hover{\n    transform: scale(1.1);\n    transition: all 250ms linear;\n  }\n}\n`;\n\nexport const Name = styled.p`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding-top: 20px;\n  padding-bottom: 10px;\n}\n`;\nexport const Img = styled.img`\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n}\n`;\n","import PropTypes from 'prop-types';\nimport { CastBox, List, Item, Img, Name } from './Cast.styled';\n\nexport const Cast = ({ cast }) => {\n  return (\n    <>\n      <CastBox>\n        <List>\n          {cast.map(({ id, original_name, profile_path }) => (\n            <Item key={id}>\n              <Img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w300/${profile_path}`\n                    : 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/300px-No_image_available.svg.png'\n                }\n                alt={original_name}\n              />\n              <Name>{original_name}</Name>\n            </Item>\n          ))}\n        </List>\n      </CastBox>\n    </>\n  );\n};\n\nCast.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_name: PropTypes.string.isRequired,\n      profile_path: PropTypes.string,\n    }).isRequired\n  ),\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getCast } from 'API/api-servises';\nimport { Cast } from 'components/Cast';\nimport Loader from 'components/Loader';\n\nconst CastPage = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    getCast(movieId)\n      .then(results => setCast(results))\n      .catch(error => setError(error.message));\n  }, [movieId]);\n\n  return (\n    <>\n      {!cast && <Loader />}\n      {cast && <Cast cast={cast} />}\n      {error && <p>Something went wrong, please try again later!</p>}\n    </>\n  );\n};\n\nexport default CastPage;\n"],"names":["CastBox","styled","List","Item","Name","Img","Cast","cast","map","id","original_name","profile_path","src","alt","movieId","useParams","useState","setCast","error","setError","useEffect","getCast","then","results","catch","message","Loader"],"sourceRoot":""}