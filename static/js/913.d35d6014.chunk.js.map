{"version":3,"file":"static/js/913.d35d6014.chunk.js","mappings":"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","sources":["API/api-servises.jsx","components/MovieList/MovieListItem/MovieListItem.styled.js","components/MovieList/MovieListItem/MovieListItem.jsx","components/MovieList/MovieList.jsx","components/MovieList/MovieList.styled.js","components/Pages/HomePage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '250f014fd6a936550e378176122f5d39';\n\nexport const searchMovies = async (query, page) => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=${page}&query=${query}&include_adult=true`\n  );\n  return response.data.results;\n};\n\nexport const getTrending = async page => {\n  const response = await axios.get(\n    `/trending/all/week?api_key=${API_KEY}&page=${page}`\n  );\n  return response.data.results;\n};\n\nexport const getDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getCast = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n","import styled from \"@emotion/styled\";\n\nexport const Item = styled.div`\n  width: 300px;\n  flex-basis: calc(100% / 4 - 30px);\n  margin-top: 30px;\n  margin-left: 30px;\n  border-radius: 5px;\n  overflow: hidden;\n  background-color: white;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  cursor: pointer;\n  transform: scale(1);\n  transition: all 250ms linear;\n  &:hover{\n    transform: scale(1.03);\n  transition: all 250ms linear;\n  }\n}\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 400px;\n}\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  p{\n    font-size: 18px;\n    font-weight: 500;\n    padding: 10px 20px;\n    color: #000;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n  }\n}\n`;\n\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Item, Img, Wrap } from './MovieListItem.styled';\n\nexport const MovieListItem = ({ movie }) => {\n  const { poster_path, name, title, id } = movie;\n  const location = useLocation();\n\n  return (\n    <Link\n      to={`/movies/${id}`}\n      state={{\n        from: location.pathname + location.search,\n      }}\n    >\n      <Item>\n        <li>\n          <Img\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n                : 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/300px-No_image_available.svg.png'\n            }\n            alt={title}\n          />\n        </li>\n        <Wrap>\n          <p>{title ?? name}</p>\n        </Wrap>\n      </Item>\n    </Link>\n  );\n};\n\nMovieListItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    poster_path: PropTypes.string,\n    name: PropTypes.string,\n    title: PropTypes.string,\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { MLContainer, List } from './MovieList.styled';\nimport { MovieListItem } from 'components/MovieList/MovieListItem/MovieListItem';\n\nexport const MovieList = ({ movies }) => {\n  return (\n    <MLContainer>\n      <List>\n        {movies.map(movie => (\n          <MovieListItem key={movie.id} movie={movie} />\n        ))}\n      </List>\n    </MLContainer>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const MLContainer = styled.div`\n  max-width: 1400px;\n  margin: 0 auto;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: -30px;\n  margin-left: -30px;\n  flex-wrap: wrap;\n  padding-top: 50px;\n  padding-bottom: 50px;\n`;\n\nexport const Title = styled.h2`\n  display:flex;\n  font-size: 48px;\n  margin-top: 50px;\n  align-items: center;\n  justify-content: center;\n`;\n\n","import { useState, useEffect } from 'react';\nimport { Title } from '../MovieList/MovieList.styled';\nimport { getTrending } from 'API/api-servises';\nimport { Link as NavLink } from 'react-router-dom';\nimport Loader from 'components/Loader';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { Pagination, PaginationItem, Stack } from '@mui/material';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState(null);\n  const [error, setError] = useState('');\n  const [page, setPage] = useState(1);\n  const pageQty = 1000;\n\n  useEffect(() => {\n    getTrending(page)\n      .then(results => setMovies([...results]))\n      .catch(error => setError(error.message));\n  }, [page]);\n\n  return (\n    <>\n      <Title>Trending Movies</Title>\n      {!movies && <Loader />}\n      {movies && <MovieList movies={movies} page={page} />}\n      {error && <p>Something went wrong, please try again later!</p>}\n      <Stack spacing={2}>\n        {!!pageQty && (\n          <Pagination\n            count={pageQty}\n            page={page}\n            onChange={(_, num) => setPage(num)}\n            showFirstButton\n            showLastButton\n            sx={{ marginY: 3, marginX: 'auto' }}\n            renderItem={item => (\n              <PaginationItem\n                component={NavLink}\n                to={`/?page=${page}`}\n                {...item}\n              />\n            )}\n          />\n        )}\n      </Stack>\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["axios","API_KEY","searchMovies","query","page","response","data","results","getTrending","getDetails","movieId","getCast","cast","getReviews","Item","styled","Img","Wrap","MovieListItem","movie","poster_path","name","title","id","location","useLocation","to","state","from","pathname","search","src","alt","MovieList","movies","map","MLContainer","List","Title","useState","setMovies","error","setError","setPage","useEffect","then","catch","message","spacing","count","onChange","_","num","showFirstButton","showLastButton","sx","marginY","marginX","renderItem","item","component","NavLink"],"sourceRoot":""}