{"version":3,"file":"static/js/902.c34f95b5.chunk.js","mappings":"sPAEaA,EAAmBC,EAAAA,EAAAA,IAAH,gHAOhBC,EAAOD,EAAAA,EAAAA,GAAH,2H,SCNJE,EAAU,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACxB,OACE,+BACE,SAACJ,EAAD,WACE,SAACE,EAAD,UACGE,EAAQC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,WAAYC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,OAA5B,OACX,2BACE,wBAAKA,KACL,uBAAIF,KACJ,uBAAIC,MAHGF,a,UCmBrB,EAtBoB,WAClB,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOR,EAAP,KAAgBS,EAAhB,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACRD,GAAW,IACXE,EAAAA,EAAAA,IAAWT,GACRU,MAAK,SAAAC,GAAO,OAAIR,EAAWQ,MAC3BC,OAAM,SAAAR,GAAK,OAAIC,EAASD,EAAMS,YAC9BC,SAAQ,kBAAMP,GAAW,QAC3B,CAACP,KAGF,gCACGM,IAAW,SAACS,EAAA,EAAD,IACXrB,IAAW,SAACD,EAAD,CAASC,QAASA,IAC7BU,IAAS","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","Pages/ReviewsPage.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const ReviewsContainer = styled.div`\n  max-width: 1400px;\n  margin: 0 auto;\n  padding-top: 50px;\n  padding-bottom: 50px;\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  h2{\n    margin-bottom: 10px;\n}\n  }\n  p{\n    margin-bottom: 20px;\n  }\n`;\n\n","import PropTypes from 'prop-types';\nimport { ReviewsContainer, List } from './Reviews.styled';\n\nexport const Reviews = ({ reviews }) => {\n  return (\n    <>\n      <ReviewsContainer>\n        <List>\n          {reviews.map(({ id, created_at, content, author }) => (\n            <li key={id}>\n              <h2>{author}</h2>\n              <p>{created_at}</p>\n              <p>{content}</p>\n            </li>\n          ))}\n        </List>\n      </ReviewsContainer>\n    </>\n  );\n};\n\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      created_at: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'API/api-servises';\nimport { Reviews } from 'components/Reviews/Reviews';\nimport Loader from 'components/Loader';\n\nconst ReviewsPage = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    getReviews(movieId)\n      .then(results => setReviews(results))\n      .catch(error => setError(error.message))\n      .finally(() => setLoading(false));\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {reviews && <Reviews reviews={reviews} />}\n      {error && <p>Something went wrong, please try again later!g</p>}\n    </>\n  );\n};\nexport default ReviewsPage;\n"],"names":["ReviewsContainer","styled","List","Reviews","reviews","map","id","created_at","content","author","movieId","useParams","useState","setReviews","error","setError","loading","setLoading","useEffect","getReviews","then","results","catch","message","finally","Loader"],"sourceRoot":""}